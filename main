{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Assignment 1 - Exploratory Data Analysis : R tasks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "wH-vk4uEUI2I",
    "outputId": "bd67a43a-fdb1-481a-e7ef-063640ac5ecc"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: rpy2==3.5.1 in /usr/local/lib/python3.10/dist-packages (3.5.1)\n",
      "Requirement already satisfied: cffi>=1.10.0 in /usr/local/lib/python3.10/dist-packages (from rpy2==3.5.1) (1.15.1)\n",
      "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from rpy2==3.5.1) (3.1.2)\n",
      "Requirement already satisfied: pytz in /usr/local/lib/python3.10/dist-packages (from rpy2==3.5.1) (2022.7.1)\n",
      "Requirement already satisfied: tzlocal in /usr/local/lib/python3.10/dist-packages (from rpy2==3.5.1) (5.0.1)\n",
      "Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.10.0->rpy2==3.5.1) (2.21)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->rpy2==3.5.1) (2.1.3)\n"
     ]
    }
   ],
   "source": [
    "!pip install rpy2==3.5.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "id": "b0DFLRRqUZud"
   },
   "outputs": [],
   "source": [
    "%load_ext rpy2.ipython"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "FmcMqmo12A3l"
   },
   "source": [
    "#1A: Display all the details about the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "4xy9bfYKUfHv",
    "outputId": "59ab81c0-f903-49db-ee24-a657bf25b011"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rows: 8807 Columns: 12\n",
      "── Column specification ────────────────────────────────────────────────────────\n",
      "Delimiter: \",\"\n",
      "chr (11): show_id, type, title, director, cast, country, date_added, rating,...\n",
      "dbl  (1): release_year\n",
      "\n",
      "ℹ Use `spec()` to retrieve the full column specification for this data.\n",
      "ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "spc_tbl_ [8,807 × 12] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ show_id     : chr [1:8807] \"s1\" \"s2\" \"s3\" \"s4\" ...\n",
      " $ type        : chr [1:8807] \"Movie\" \"TV Show\" \"TV Show\" \"TV Show\" ...\n",
      " $ title       : chr [1:8807] \"Dick Johnson Is Dead\" \"Blood & Water\" \"Ganglands\" \"Jailbirds New Orleans\" ...\n",
      " $ director    : chr [1:8807] \"Kirsten Johnson\" NA \"Julien Leclercq\" NA ...\n",
      " $ cast        : chr [1:8807] NA \"Ama Qamata, Khosi Ngema, Gail Mabalane, Thabang Molaba, Dillon Windvogel, Natasha Thahane, Arno Greeff, Xolile \"| __truncated__ \"Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabiha Akkari, Sofia Lesaffre, Salim Kechiouche, Noureddine Farihi, G\"| __truncated__ NA ...\n",
      " $ country     : chr [1:8807] \"United States\" \"South Africa\" NA NA ...\n",
      " $ date_added  : chr [1:8807] \"September 25, 2021\" \"September 24, 2021\" \"September 24, 2021\" \"September 24, 2021\" ...\n",
      " $ release_year: num [1:8807] 2020 2021 2021 2021 2021 ...\n",
      " $ rating      : chr [1:8807] \"PG-13\" \"TV-MA\" \"TV-MA\" \"TV-MA\" ...\n",
      " $ duration    : chr [1:8807] \"90 min\" \"2 Seasons\" \"1 Season\" \"1 Season\" ...\n",
      " $ listed_in   : chr [1:8807] \"Documentaries\" \"International TV Shows, TV Dramas, TV Mysteries\" \"Crime TV Shows, International TV Shows, TV Action & Adventure\" \"Docuseries, Reality TV\" ...\n",
      " $ description : chr [1:8807] \"As her father nears the end of his life, filmmaker Kirsten Johnson stages his death in inventive and comical wa\"| __truncated__ \"After crossing paths at a party, a Cape Town teen sets out to prove whether a private-school swimming star is h\"| __truncated__ \"To protect his family from a powerful drug lord, skilled thief Mehdi and his expert team of robbers are pulled \"| __truncated__ \"Feuds, flirtations and toilet talk go down among the incarcerated women at the Orleans Justice Center in New Or\"| __truncated__ ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   show_id = col_character(),\n",
      "  ..   type = col_character(),\n",
      "  ..   title = col_character(),\n",
      "  ..   director = col_character(),\n",
      "  ..   cast = col_character(),\n",
      "  ..   country = col_character(),\n",
      "  ..   date_added = col_character(),\n",
      "  ..   release_year = col_double(),\n",
      "  ..   rating = col_character(),\n",
      "  ..   duration = col_character(),\n",
      "  ..   listed_in = col_character(),\n",
      "  ..   description = col_character()\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n"
     ]
    }
   ],
   "source": [
    "%%R\n",
    "# Load the required library\n",
    "library(readr)\n",
    "\n",
    "# Read the dataset\n",
    "movies_data <- read_csv(\"netflix_titles.csv\")\n",
    "\n",
    "# Display all the details about the dataset\n",
    "str(movies_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "DuFsYsq418Ay"
   },
   "source": [
    "#1B :Check for null values within each column.\n",
    "#Fill the values for more than 100 missing columns with certain label such as No Director, Country Unavailable, etc. Drop the rows for the rest missing columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "c6-xyOhZUqHa",
    "outputId": "9bdaa9ee-d1e3-4f02-db03-946cf35e90fc"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     show_id         type        title     director         cast      country \n",
      "           0            0            0         2634          825          831 \n",
      "  date_added release_year       rating     duration    listed_in  description \n",
      "          10            0            4            3            0            0 \n",
      "[1] \"Columns with more than 100 missing value:\"\n",
      "[1] \"director\" \"cast\"     \"country\" \n",
      "     show_id         type        title     director         cast      country \n",
      "           0            0            0            0            0            0 \n",
      "  date_added release_year       rating     duration    listed_in  description \n",
      "           0            0            0            0            0            0 \n",
      "# A tibble: 8,790 × 12\n",
      "   show_id type    title   director cast  country date_added release_year rating\n",
      "   <chr>   <chr>   <chr>   <chr>    <chr> <chr>   <chr>             <dbl> <chr> \n",
      " 1 s1      Movie   Dick J… Kirsten… Cast… United… September…         2020 PG-13 \n",
      " 2 s2      TV Show Blood … No Dire… Ama … South … September…         2021 TV-MA \n",
      " 3 s3      TV Show Gangla… Julien … Sami… Countr… September…         2021 TV-MA \n",
      " 4 s4      TV Show Jailbi… No Dire… Cast… Countr… September…         2021 TV-MA \n",
      " 5 s5      TV Show Kota F… No Dire… Mayu… India   September…         2021 TV-MA \n",
      " 6 s6      TV Show Midnig… Mike Fl… Kate… Countr… September…         2021 TV-MA \n",
      " 7 s7      Movie   My Lit… Robert … Vane… Countr… September…         2021 PG    \n",
      " 8 s8      Movie   Sankofa Haile G… Kofi… United… September…         1993 TV-MA \n",
      " 9 s9      TV Show The Gr… Andy De… Mel … United… September…         2021 TV-14 \n",
      "10 s10     Movie   The St… Theodor… Meli… United… September…         2021 PG-13 \n",
      "# ℹ 8,780 more rows\n",
      "# ℹ 3 more variables: duration <chr>, listed_in <chr>, description <chr>\n",
      "# ℹ Use `print(n = ...)` to see more rows\n"
     ]
    }
   ],
   "source": [
    "%%R\n",
    "# Load the required library\n",
    "library(tidyr)\n",
    "\n",
    "# Counting the null/missing values of particular columns\n",
    "null_count <- colSums(is.na(movies_data))\n",
    "\n",
    "# Printing the null_count\n",
    "print(null_count)\n",
    "\n",
    "# Retrieve the columns which have more than 100 missing values\n",
    "missing_cols <- names(null_count[null_count > 100])\n",
    "\n",
    "# Printing columns with more than 100 missing values\n",
    "print('Columns with more than 100 missing value:')\n",
    "print(missing_cols)\n",
    "\n",
    "# Define fill values for missing columns\n",
    "fill_values <- list(\n",
    "  \"director\" = \"No Director\",\n",
    "  \"country\" = \"Country Unavailable\",\n",
    "  \"cast\" = \"Cast Unavailable\"\n",
    ")\n",
    "\n",
    "# Using fill_values to fill the missing columns of more than 100\n",
    "for (col in names(fill_values)) {\n",
    "  if (col %in% names(movies_data)) {\n",
    "    movies_data[[col]] <- ifelse(is.na(movies_data[[col]]), fill_values[[col]], movies_data[[col]])\n",
    "  }\n",
    "}\n",
    "\n",
    "# Drop rows with less than 100 missing columns (i.e., keeping only rows without any missing values)\n",
    "movies_data <- drop_na(movies_data)\n",
    "\n",
    "# Verify the changes\n",
    "null_counts_after <- colSums(is.na(movies_data))\n",
    "print(null_counts_after)\n",
    "print(movies_data)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "mXaI17tN1-Hz"
   },
   "source": [
    "#1C: Display a two horizontal bar chart side by side for Top 10 countries with total number of movies and TV shows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "9FUw0NPgVPbf",
    "outputId": "889bdbf8-9bea-45ca-aeb9-24d7bac0a215",
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: \n",
      "Attaching package: ‘dplyr’\n",
      "\n",
      "\n",
      "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: The following objects are masked from ‘package:stats’:\n",
      "\n",
      "    filter, lag\n",
      "\n",
      "\n",
      "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: The following objects are masked from ‘package:base’:\n",
      "\n",
      "    intersect, setdiff, setequal, union\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%R\n",
    "# Load the required libraries\n",
    "library(dplyr)\n",
    "library(tidyr)\n",
    "library(ggplot2)\n",
    "\n",
    "\n",
    "\n",
    "# Generate distinct rows for the countries with multiple values\n",
    "movies_data$country <- strsplit(movies_data$country, \", \")\n",
    "movies_data_expanded <- unnest(movies_data, country)\n",
    "\n",
    "# Filtering movies and TV shows separately\n",
    "movies <- filter(movies_data_expanded, type == \"Movie\")\n",
    "tv_shows <- filter(movies_data_expanded, type == \"TV Show\")\n",
    "\n",
    "# Count the number of movies and TV shows for each country\n",
    "movies_count <- count(movies, country) %>%\n",
    "  arrange(desc(n)) %>%\n",
    "  head(10)\n",
    "\n",
    "tv_shows_count <- count(tv_shows, country) %>%\n",
    "  arrange(desc(n)) %>%\n",
    "  head(10)\n",
    "\n",
    "# Create a figure with two subplots\n",
    "p1 <- ggplot(movies_count, aes(reorder(country, -n), n)) +\n",
    "  geom_bar(stat = \"identity\", fill = \"blue\") +\n",
    "  coord_flip() +\n",
    "  labs(title = \"Top 10 Countries - Movies\", x = \"Country\", y = \"Count\")\n",
    "\n",
    "p2 <- ggplot(tv_shows_count, aes(reorder(country, -n), n)) +\n",
    "  geom_bar(stat = \"identity\", fill = \"red\") +\n",
    "  coord_flip() +\n",
    "  labs(title = \"Top 10 Countries - TV Shows\", x = \"Country\", y = \"Count\")\n",
    "\n",
    "# Display the plots\n",
    "print(p1)\n",
    "print(p2)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 977
    },
    "id": "UtE2br7wxCqV",
    "outputId": "31bf7657-03a2-4357-a53b-a3e703f3e97c"
   },
   "outputs": [
    {
     "data": {
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%R\n",
    "print(p1)\n",
    "print(p2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "4JqvjNJ-14b5"
   },
   "source": [
    "#1D:Print the first row based on the longest duration time of a movie from each country column with its director, date_added, release_year, duration of the movie and its description."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "RE-Zli4PVxpH",
    "outputId": "bd51e9c2-fa53-4d5c-96b0-db64c59b8baf"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Country: Burkina Faso \n",
      "Director: Haile Gerima \n",
      "Date Added: September 24, 2021 \n",
      "Release Year: 1993 \n",
      "Duration (minutes): 125 \n",
      "Description: On a photo shoot in Ghana, an American model slips back in time, becomes enslaved on a plantation and bears witness to the agony of her ancestral past. \n",
      "\n",
      "Country: Ethiopia \n",
      "Director: Haile Gerima \n",
      "Date Added: September 24, 2021 \n",
      "Release Year: 1993 \n",
      "Duration (minutes): 125 \n",
      "Description: On a photo shoot in Ghana, an American model slips back in time, becomes enslaved on a plantation and bears witness to the agony of her ancestral past. \n",
      "\n",
      "Country: Nigeria \n",
      "Director: Kemi Adetiba \n",
      "Date Added: September 14, 2021 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 182 \n",
      "Description: When a powerful businesswoman’s political ambitions are threatened by her underworld connections, the ensuing power struggle could cost her everything. \n",
      "\n",
      "Country: Italy \n",
      "Director: Sergio Leone \n",
      "Date Added: September 1, 2021 \n",
      "Release Year: 1984 \n",
      "Duration (minutes): 229 \n",
      "Description: Director Sergio Leone's sprawling crime epic follows a group of Jewish mobsters who rise in the ranks of organized crime in 1920s New York City. \n",
      "\n",
      "Country: Argentina \n",
      "Director: Marcelo Piñeyro \n",
      "Date Added: August 5, 2021 \n",
      "Release Year: 1993 \n",
      "Duration (minutes): 124 \n",
      "Description: One of the first rock stars in Argentina, Tango leads a full life during an era of social unrest – one of both glory and despair. \n",
      "\n",
      "Country: No Director\n",
      "Director: Najwa Najjar \n",
      "Date Added: July 30, 2021 \n",
      "Release Year: 2014 \n",
      "Duration (minutes): 103 \n",
      "Description: After a decade in prison, a Palestinian man with a dark secret returns to the West Bank and searches for the daughter he lost long ago. \n",
      "\n",
      "Country: Vietnam \n",
      "Director: Victor Vu \n",
      "Date Added: July 1, 2021 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 117 \n",
      "Description: Through heartbreak and betrayal, Ngan's unrequited love for his childhood best friend Hà La endures for a generation in this sweeping romance. \n",
      "\n",
      "Country: Country Unavailable \n",
      "Director: No Director \n",
      "Date Added: June 15, 2021 \n",
      "Release Year: 2021 \n",
      "Duration (minutes): 273 \n",
      "Description: Do you want to relax, meditate or sleep deeply? Personalize the experience according to your mood or mindset with this Headspace interactive special. \n",
      "\n",
      "Country: Vietnam \n",
      "Director: Bao Nhan, Namcito \n",
      "Date Added: June 10, 2021 \n",
      "Release Year: 2021 \n",
      "Duration (minutes): 117 \n",
      "Description: Tensions rise and untold secrets surface for three royal sisters when a family treasure is stolen the night before an antique auction. \n",
      "\n",
      "Country: Syria \n",
      "Director: Soudade Kaadan \n",
      "Date Added: May 27, 2021 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 91 \n",
      "Description: As winter hits hard and resources run low in Damascus, a single mom heads to the war-scarred outskirts looking for gas to prepare her son a warm meal. \n",
      "\n",
      "Country: Mauritius \n",
      "Director: Brent Dawes \n",
      "Date Added: May 14, 2021 \n",
      "Release Year: 2021 \n",
      "Duration (minutes): 90 \n",
      "Description: When a lost and lonely alien crash-lands on Earth, his new crew of talking animal friends helps him get back home — and try to save the world! \n",
      "\n",
      "Country: United Kingdom \n",
      "Director: Ashutosh Gowariker \n",
      "Date Added: April 17, 2021 \n",
      "Release Year: 2001 \n",
      "Duration (minutes): 224 \n",
      "Description: In 1890s India, an arrogant British commander challenges the harshly taxed residents of Champaner to a high-stakes cricket match. \n",
      "\n",
      "Country: Cameroon \n",
      "Director: Enah Johnscott \n",
      "Date Added: April 4, 2021 \n",
      "Release Year: 2020 \n",
      "Duration (minutes): 143 \n",
      "Description: Inspired by Nobel Peace Prize winner Malala Yousafzai, a young girl defies the expectations of her father and village to pursue an education \n",
      "\n",
      "Country: Palestine \n",
      "Director: Lina Al Abed \n",
      "Date Added: April 1, 2021 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 75 \n",
      "Description: Raised in a quiet home, Lina searches for answers while investigating the mystery behind her father's disappearance in this documentary. \n",
      "\n",
      "Country: Poland \n",
      "Director: Roman Polański \n",
      "Date Added: April 1, 2021 \n",
      "Release Year: 2002 \n",
      "Duration (minutes): 149 \n",
      "Description: Famed Polish pianist Wladyslaw Szpilman struggles to survive the onslaught of Nazi tyranny during World War II in this drama based on his memoirs. \n",
      "\n",
      "Country: South Africa \n",
      "Director: Justin Chadwick \n",
      "Date Added: March 29, 2021 \n",
      "Release Year: 2013 \n",
      "Duration (minutes): 141 \n",
      "Description: This in-depth biopic portrays groundbreaking South African leader Nelson Mandela's fight against political oppression and virulent racism. \n",
      "\n",
      "Country: Colombia \n",
      "Director: Carlos Moreno \n",
      "Date Added: March 5, 2021 \n",
      "Release Year: 2021 \n",
      "Duration (minutes): 108 \n",
      "Description: When a narco past his prime refuses to pay a debt to an upstart, only a secret stash of money can save his men. But guess what the gardener just found? \n",
      "\n",
      "Country: Portugal \n",
      "Director: Marco Pontecorvo \n",
      "Date Added: January 31, 2021 \n",
      "Release Year: 2020 \n",
      "Duration (minutes): 113 \n",
      "Description: In 1917 Portugal, visions of the Virgin Mary come to three children whose message of faith raises doubts in their family and angers authorities. \n",
      "\n",
      "Country: Malta \n",
      "Director: Ron Howard \n",
      "Date Added: December 1, 2020 \n",
      "Release Year: 2006 \n",
      "Duration (minutes): 149 \n",
      "Description: When the curator of the Louvre is killed, a Harvard professor and a cryptographer must untangle a web of deceit involving works of Leonardo da Vinci. \n",
      "\n",
      "Country: Lebanon \n",
      "Director: Philippe Aractingi \n",
      "Date Added: October 19, 2020 \n",
      "Release Year: 2005 \n",
      "Duration (minutes): 112 \n",
      "Description: After 15 years in France, Kamal returns to his native Beirut and reassembles his dance crew, striving to modernize traditional Dabke routines. \n",
      "\n",
      "Country: Saudi Arabia \n",
      "Director: Faris Godus \n",
      "Date Added: October 1, 2020 \n",
      "Release Year: 2020 \n",
      "Duration (minutes): 120 \n",
      "Description: A high school senior sets out to make a no-budget horror film with his friend, one-time rival and teacher, but the project soon jeopardizes their future. \n",
      "\n",
      "Country: Angola \n",
      "Director: Chris Roland, Maradona Dias Dos Santos \n",
      "Date Added: August 28, 2020 \n",
      "Release Year: 2020 \n",
      "Duration (minutes): 107 \n",
      "Description: Two brothers — one a narcotics agent and the other a general — finally discover the identity of the drug lord who murdered their parents decades ago. \n",
      "\n",
      "Country: Mozambique \n",
      "Director: Mickey Fonseca \n",
      "Date Added: July 29, 2020 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 102 \n",
      "Description: Newly released from prison, a man returning to his girlfriend and their child subsequently learns about a dangerous debt taken by his late mother. \n",
      "\n",
      "Country: Cambodia, \n",
      "Director: Denis Do \n",
      "Date Added: July 18, 2020 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 87 \n",
      "Description: Separated from their young son during the brutal Khmer Rouge revolution, a couple must find ways to endure while searching for their child. \n",
      "\n",
      "Country: Belarus \n",
      "Director: No Director \n",
      "Date Added: July 15, 2020 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 2 \n",
      "Description: Furry little bunnies hop through wild adventures as they find solutions, fun and sometimes mischief wherever there is light. \n",
      "\n",
      "Country: Ghana \n",
      "Director: Shirley Frimpong-Manso \n",
      "Date Added: July 3, 2020 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 148 \n",
      "Description: From flawed husbands to shaky finances, new complications test a close circle of friends who must lean on each other in a new decade of their lives. \n",
      "\n",
      "Country: Algeria \n",
      "Director: Youssef Chahine \n",
      "Date Added: June 18, 2020 \n",
      "Release Year: 1979 \n",
      "Duration (minutes): 131 \n",
      "Description: Living in Alexandria during World War II, an Egyptian teen enamored with American films dreams of making it in Hollywood. \n",
      "\n",
      "Country: Jordan \n",
      "Director: Ali F. Mostafa \n",
      "Date Added: June 11, 2020 \n",
      "Release Year: 2014 \n",
      "Duration (minutes): 104 \n",
      "Description: To celebrate the memory of their pal who passed away, three estranged friends attempt to reconnect on an eventful road trip from Abu Dhabi to Beirut. \n",
      "\n",
      "Country: Kuwait \n",
      "Director: Almunsif Alsuwaisi \n",
      "Date Added: May 21, 2020 \n",
      "Release Year: 1981 \n",
      "Duration (minutes): 177 \n",
      "Description: In this satirical play, a wealthy Kuwaiti businessman travels to London for pleasure and encounters a host of eccentric characters. \n",
      "\n",
      "Country: Egypt \n",
      "Director: Houssam El-Din Mustafa \n",
      "Date Added: May 21, 2020 \n",
      "Release Year: 1973 \n",
      "Duration (minutes): 253 \n",
      "Description: A high school teacher volunteers to transform five notorious misfits into model students — and has unintended results. \n",
      "\n",
      "Country: Mexico \n",
      "Director: Julián Hernández \n",
      "Date Added: May 14, 2020 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 152 \n",
      "Description: Armed with a thirst for revenge, a vigilante makes justice her business after being hired by various women to seduce and humiliate their rapists. \n",
      "\n",
      "Country: Japan \n",
      "Director: Martin Scorsese \n",
      "Date Added: April 25, 2020 \n",
      "Release Year: 2005 \n",
      "Duration (minutes): 208 \n",
      "Description: Featuring rare concert footage and interviews with legendary musicians, this documentary traces Bob Dylan's life story and extraordinary career. \n",
      "\n",
      "Country: Indonesia \n",
      "Director: Hanung Bramantyo \n",
      "Date Added: April 23, 2020 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 180 \n",
      "Description: A Javanese royal and half-Dutch woman fall in love as Indonesia rises to independence from colonial rule. Based on Pramoedya Ananta Toer's famed novel. \n",
      "\n",
      "Country: Puerto Rico \n",
      "Director: No Director \n",
      "Date Added: April 21, 2020 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 1 \n",
      "Description: Follow reggaeton artist Nicky Jam's struggles to overcome drug addiction and rise to international success in this dramatization of his life story. \n",
      "\n",
      "Country: Romania \n",
      "Director: Cristi Puiu \n",
      "Date Added: March 4, 2020 \n",
      "Release Year: 2010 \n",
      "Duration (minutes): 186 \n",
      "Description: 42-year-old Viorel, a distraught engineer, takes drastic measures to end his emotional suffering after enduring a devastating divorce. \n",
      "\n",
      "Country: France \n",
      "Director: Cristi Puiu \n",
      "Date Added: March 4, 2020 \n",
      "Release Year: 2010 \n",
      "Duration (minutes): 186 \n",
      "Description: 42-year-old Viorel, a distraught engineer, takes drastic measures to end his emotional suffering after enduring a devastating divorce. \n",
      "\n",
      "Country: Switzerland \n",
      "Director: Cristi Puiu \n",
      "Date Added: March 4, 2020 \n",
      "Release Year: 2010 \n",
      "Duration (minutes): 186 \n",
      "Description: 42-year-old Viorel, a distraught engineer, takes drastic measures to end his emotional suffering after enduring a devastating divorce. \n",
      "\n",
      "Country: Germany \n",
      "Director: Cristi Puiu \n",
      "Date Added: March 4, 2020 \n",
      "Release Year: 2010 \n",
      "Duration (minutes): 186 \n",
      "Description: 42-year-old Viorel, a distraught engineer, takes drastic measures to end his emotional suffering after enduring a devastating divorce. \n",
      "\n",
      "Country: Cyprus \n",
      "Director: No Director \n",
      "Date Added: February 15, 2020 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 1 \n",
      "Description: Full of funny one-liners and always ready for an adventure, a talking cat and his equally chatty animal cohorts set out to become famous. \n",
      "\n",
      "Country: Taiwan \n",
      "Director: Chung Mong-hong \n",
      "Date Added: January 24, 2020 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 156 \n",
      "Description: A family reckons with the aftermath of their younger son's incarceration and a greater misfortune that follows. \n",
      "\n",
      "Country: Bangladesh \n",
      "Director: Nuhash Humayun, Syed Ahmed Shawki, Rahat Rahman, Robiul Alam Robi, Golam Kibria Farooki, Mir Mukarram Hossain, Tanvir Ahsan, Mahmudul Islam, Abdullah Al Noor, Krishnendu Chattopadhyay, Syed Saleh Ahmed Sobhan \n",
      "Date Added: December 16, 2019 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 136 \n",
      "Description: Eleven emerging Bangladeshi filmmakers present a collection of gritty shorts centered on the capital city and the people living in its margins. \n",
      "\n",
      "Country: Bulgaria \n",
      "Director: Tudor Giurgiu \n",
      "Date Added: December 1, 2019 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 126 \n",
      "Description: A young prosecutor is assigned a career-making case involving a colleague but soon starts to question the motivations behind the charges. \n",
      "\n",
      "Country: Senegal \n",
      "Director: Mati Diop \n",
      "Date Added: November 29, 2019 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 106 \n",
      "Description: Arranged to marry a rich man, young Ada is crushed when her true love goes missing at sea during a migration attempt – until a miracle reunites them. \n",
      "\n",
      "Country: Hungary \n",
      "Director: David Michôd \n",
      "Date Added: November 1, 2019 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 141 \n",
      "Description: Wayward Prince Hal must turn from carouser to warrior king as he faces hostilities from inside and outside the castle walls in the battle for England. \n",
      "\n",
      "Country: Denmark \n",
      "Director: Bille August \n",
      "Date Added: April 20, 2019 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 168 \n",
      "Description: A gifted engineer flees his austere roots to pursue wealth and success among Copenhagen's elite, but the pride propelling him threatens to be his ruin. \n",
      "\n",
      "Country: Iraq \n",
      "Director: Fritz Ofner \n",
      "Date Added: March 2, 2019 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 89 \n",
      "Description: Speaking to retailers and owners of the Glock pistol, two filmmakers shed light on the politics of violence and its implications from Chicago to Kirkuk. \n",
      "\n",
      "Country: Malawi \n",
      "Director: Chiwetel Ejiofor \n",
      "Date Added: March 1, 2019 \n",
      "Release Year: 2019 \n",
      "Duration (minutes): 114 \n",
      "Description: Inspired by a science book, 13-year-old William Kamkwamba builds a wind turbine to save his Malawian village from famine. Based on a true story. \n",
      "\n",
      "Country: Paraguay \n",
      "Director: Rodrigo Salomón, Pietro Scappini \n",
      "Date Added: March 1, 2019 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 107 \n",
      "Description: An ex-colonel forms a special paramilitary group focused on combatting drug trafficking on the Paraguayan border. \n",
      "\n",
      "Country: Philippines \n",
      "Director: Jerrold Tarog \n",
      "Date Added: January 26, 2019 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 150 \n",
      "Description: Brash ladies' man Gregorio \"Goyo\" del Pilar rises to become one of the Philippines' youngest generals in this historical epic sequel to \"Heneral Luna.\" \n",
      "\n",
      "Country: Uruguay \n",
      "Director: Álvaro Brechner \n",
      "Date Added: December 28, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 122 \n",
      "Description: Future Uruguayan president José Mujica and his fellow Tupamaro political prisoners fight to survive 12 years of solitary confinement and torture. \n",
      "\n",
      "Country: United States \n",
      "Director: No Director \n",
      "Date Added: December 28, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 312 \n",
      "Description: In 1984, a young programmer begins to question reality as he adapts a dark fantasy novel into a video game. A mind-bending tale with multiple endings. \n",
      "\n",
      "Country: Australia \n",
      "Director: Baljit Singh Deo \n",
      "Date Added: December 1, 2018 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 146 \n",
      "Description: When a man is arrested on arrival in America because authorities mistake him for a wanted gangster, a new friend tries to help him prove his innocence. \n",
      "\n",
      "Country: Russia \n",
      "Director: Aleksey German \n",
      "Date Added: October 26, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 126 \n",
      "Description: Over six days in 1971, brilliant writer Sergei Dovlatov encounters maddening barriers to publishing his work under the repressive Soviet regime. \n",
      "\n",
      "Country: Cayman Islands \n",
      "Director: Peter Lepeniotis \n",
      "Date Added: October 19, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 86 \n",
      "Description: After moving into a new house with her mom, high schooler Chloe discovers a troupe of talking garden gnomes who need her help saving the world. \n",
      "\n",
      "Country: Iceland \n",
      "Director: Paul Greengrass \n",
      "Date Added: October 10, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 144 \n",
      "Description: After devastating terror attacks in Norway, a young survivor, grieving families and the country rally for justice and healing. Based on a true story. \n",
      "\n",
      "Country: United States, \n",
      "Director: Madeleine Gavin \n",
      "Date Added: September 7, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 77 \n",
      "Description: Women who've been sexually brutalized in war-torn Congo begin to heal at City of Joy, a center that helps them regain a sense of self and empowerment. \n",
      "\n",
      "Country: Brazil \n",
      "Director: Alexandre Avancini \n",
      "Date Added: July 20, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 133 \n",
      "Description: This biographical drama traces the rise to fame of controversial Brazilian evangelical leader and business titan Edir Macedo. \n",
      "\n",
      "Country: Chile \n",
      "Director: Eduardo Mendoza de Echave \n",
      "Date Added: June 15, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 119 \n",
      "Description: In this compelling true story, two Peruvian detectives go undercover to locate and capture the elusive leader of the Shining Path guerrilla army. \n",
      "\n",
      "Country: Peru \n",
      "Director: Eduardo Mendoza de Echave \n",
      "Date Added: June 15, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 119 \n",
      "Description: In this compelling true story, two Peruvian detectives go undercover to locate and capture the elusive leader of the Shining Path guerrilla army. \n",
      "\n",
      "Country: Albania \n",
      "Director: Antonio Morabito \n",
      "Date Added: May 4, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 105 \n",
      "Description: Threatened by creditors, a newly unemployed man agrees to work for a debt collector, but soon discovers his deal with the devil has unexpected costs. \n",
      "\n",
      "Country: Colombia \n",
      "Director: Peter Webber \n",
      "Date Added: April 12, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 108 \n",
      "Description: Aspiring teen thieves learn what it takes to be successful pickpockets on the streets of Bogotá from a master in the arts of trickery and deception. \n",
      "\n",
      "Country: Qatar \n",
      "Director: Mikhail Red \n",
      "Date Added: March 26, 2018 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 115 \n",
      "Description: A sheltered farm girl inadvertently shoots an endangered Philippine eagle, setting off a police investigation that exposes violence and corruption. \n",
      "\n",
      "Country: Soviet Union \n",
      "Director: Latif Faiziyev, Umesh Mehra \n",
      "Date Added: December 8, 2017 \n",
      "Release Year: 1991 \n",
      "Duration (minutes): 163 \n",
      "Description: When Shankar, who performs on the road with partner Chanchal and elephant Appu, falls for a Russian circus performer, jealousies and conflicts arise. \n",
      "\n",
      "Country: Georgia \n",
      "Director: Nana Ekvtimishvili, Simon Gross \n",
      "Date Added: December 1, 2017 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 119 \n",
      "Description: A middle-aged wife and mother of two shocks her traditional, multigenerational Georgian household when she announces she's going to live by herself. \n",
      "\n",
      "Country: Malaysia \n",
      "Director: Shakti Samanta \n",
      "Date Added: October 15, 2017 \n",
      "Release Year: 1960 \n",
      "Duration (minutes): 158 \n",
      "Description: When his employee disappears in Singapore, Shyam travels from India to investigate the absence and becomes entangled in a deadly plot. \n",
      "\n",
      "Country: Cambodia \n",
      "Director: Angelina Jolie \n",
      "Date Added: September 15, 2017 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 137 \n",
      "Description: A 5-year-old girl embarks on a harrowing quest for survival amid the sudden rise and terrifying reign of the Khmer Rouge in Cambodia. \n",
      "\n",
      "Country: Slovakia \n",
      "Director: Filip Renc \n",
      "Date Added: May 15, 2017 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 110 \n",
      "Description: Before the dawn of World War II, an ambitious actress pursues her dreams in Berlin. But her plans derail when she becomes Joseph Goebbels’ mistress. \n",
      "\n",
      "Country: West Germany \n",
      "Director: Joachim Fest, Christian Herrendoerfer \n",
      "Date Added: February 10, 2017 \n",
      "Release Year: 1977 \n",
      "Duration (minutes): 150 \n",
      "Description: This documentary examines how Adolf Hitler's talent for manipulation, psychology and image-making led him from humble origins to near-world conquest. \n",
      "\n",
      "Country: Austria \n",
      "Director: Kief Davidson, Richard Ladkani \n",
      "Date Added: November 4, 2016 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 112 \n",
      "Description: Filmmakers infiltrate the corrupt global network of ivory trafficking, exposing poachers and dealers as African elephants edge closer to extinction. \n",
      "\n",
      "Country: Ukraine \n",
      "Director: Evgeny Afineevsky \n",
      "Date Added: October 9, 2015 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 99 \n",
      "Description: Over 93 days in Ukraine, what started as peaceful student demonstrations became a violent revolution and full-fledged civil rights movement. \n",
      "\n",
      "Country: United Kingdom, \n",
      "Director: Orlando von Einsiedel \n",
      "Date Added: November 7, 2014 \n",
      "Release Year: 2014 \n",
      "Duration (minutes): 100 \n",
      "Description: The Oscar-nominated true story of the rangers risking their lives to save Africa's most precious national park and its endangered gorillas. \n",
      "\n",
      "Country: Bermuda \n",
      "Director: Robert Nixon, Fisher Stevens \n",
      "Date Added: August 15, 2014 \n",
      "Release Year: 2014 \n",
      "Duration (minutes): 94 \n",
      "Description: This documentary follows oceanographer Sylvia Earle's campaign to save the world's oceans from threats such as overfishing and toxic waste. \n",
      "\n",
      "Country: Ecuador \n",
      "Director: Robert Nixon, Fisher Stevens \n",
      "Date Added: August 15, 2014 \n",
      "Release Year: 2014 \n",
      "Duration (minutes): 94 \n",
      "Description: This documentary follows oceanographer Sylvia Earle's campaign to save the world's oceans from threats such as overfishing and toxic waste. \n",
      "\n",
      "Country: Iceland \n",
      "Director: Paul Greengrass \n",
      "Date Added: October 10, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 144 \n",
      "Description: After devastating terror attacks in Norway, a young survivor, grieving families and the country rally for justice and healing. Based on a true story. \n",
      "\n",
      "Country: United Arab Emirates \n",
      "Director: J.C. Chandor \n",
      "Date Added: July 22, 2018 \n",
      "Release Year: 2014 \n",
      "Duration (minutes): 125 \n",
      "Description: Abel Morales tries to avoid corruption's easy path as he pursues the American Dream amid an increasingly violent business war in 1981 New York City. \n",
      "\n",
      "Country: Iran \n",
      "Director: Asghar Farhadi \n",
      "Date Added: March 16, 2019 \n",
      "Release Year: 2011 \n",
      "Duration (minutes): 123 \n",
      "Description: Amid an impasse in his marriage, a father in Tehran is beset by a bitter feud involving the family of a pious caretaker he hired for his aging dad. \n",
      "\n",
      "Country: Armenia \n",
      "Director: Matthew Salleh \n",
      "Date Added: August 15, 2017 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 101 \n",
      "Description: A blend of cultural nuance and mesmerizing techniques adds flavor to this globe-hopping celebration of cooking, tradition and community. \n",
      "\n",
      "Country: Mongolia \n",
      "Director: Matthew Salleh \n",
      "Date Added: August 15, 2017 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 101 \n",
      "Description: A blend of cultural nuance and mesmerizing techniques adds flavor to this globe-hopping celebration of cooking, tradition and community. \n",
      "\n",
      "Country: Belgium \n",
      "Director: Abdellatif Kechiche \n",
      "Date Added: August 26, 2016 \n",
      "Release Year: 2013 \n",
      "Duration (minutes): 180 \n",
      "Description: Determined to fall in love, 15-year-old Adele is focused on boys. But it's a blue-haired girl she meets on the street who really piques her interest. \n",
      "\n",
      "Country: Spain \n",
      "Director: Abdellatif Kechiche \n",
      "Date Added: August 26, 2016 \n",
      "Release Year: 2013 \n",
      "Duration (minutes): 180 \n",
      "Description: Determined to fall in love, 15-year-old Adele is focused on boys. But it's a blue-haired girl she meets on the street who really piques her interest. \n",
      "\n",
      "Country: South Korea \n",
      "Director: Lee Chang-dong \n",
      "Date Added: April 29, 2019 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 148 \n",
      "Description: An aspiring writer goes to the airport to pick up a high school friend returning from a trip to Africa but is disheartened to see her with another man. \n",
      "\n",
      "Country: Czech Republic \n",
      "Director: Martin Campbell \n",
      "Date Added: August 31, 2020 \n",
      "Release Year: 2006 \n",
      "Duration (minutes): 145 \n",
      "Description: Daniel Craig makes his debut as the newly minted agent 007, who's pitted against an infamous financier of global terrorism – at the poker table. \n",
      "\n",
      "Country: Bahamas \n",
      "Director: Martin Campbell \n",
      "Date Added: August 31, 2020 \n",
      "Release Year: 2006 \n",
      "Duration (minutes): 145 \n",
      "Description: Daniel Craig makes his debut as the newly minted agent 007, who's pitted against an infamous financier of global terrorism – at the poker table. \n",
      "\n",
      "Country: Sri Lanka \n",
      "Director: Arne Birkenstock \n",
      "Date Added: March 1, 2017 \n",
      "Release Year: 2010 \n",
      "Duration (minutes): 87 \n",
      "Description: A girl who wants to be an elephant driver like her father is given the chance to raise a calf and becomes even more determined when it's taken away. \n",
      "\n",
      "Country: Hong Kong \n",
      "Director: Lilly Wachowski, Lana Wachowski, Tom Tykwer \n",
      "Date Added: August 1, 2017 \n",
      "Release Year: 2012 \n",
      "Duration (minutes): 172 \n",
      "Description: In this star-studded drama, six seemingly disparate stories explore the complicated links that humanity shares through the generations. \n",
      "\n",
      "Country: Singapore \n",
      "Director: Lilly Wachowski, Lana Wachowski, Tom Tykwer \n",
      "Date Added: August 1, 2017 \n",
      "Release Year: 2012 \n",
      "Duration (minutes): 172 \n",
      "Description: In this star-studded drama, six seemingly disparate stories explore the complicated links that humanity shares through the generations. \n",
      "\n",
      "Country: Turkey \n",
      "Director: Hasan Karacadağ \n",
      "Date Added: April 17, 2019 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 153 \n",
      "Description: A cardiologist tries to pinpoint the cause of her mother's sudden death as her sister, who witnessed it, claims malevolent demons are at play. \n",
      "\n",
      "Country: Finland \n",
      "Director: Saara Cantell \n",
      "Date Added: June 1, 2017 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 108 \n",
      "Description: On a small Finnish island in 1666, a teenage girl in love with a married fisherman becomes the center of a tragic witch hunt and power struggle. \n",
      "\n",
      "Country: Latvia \n",
      "Director: Saara Cantell \n",
      "Date Added: June 1, 2017 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 108 \n",
      "Description: On a small Finnish island in 1666, a teenage girl in love with a married fisherman becomes the center of a tragic witch hunt and power struggle. \n",
      "\n",
      "Country: Liechtenstein \n",
      "Director: David Lean \n",
      "Date Added: November 1, 2019 \n",
      "Release Year: 1965 \n",
      "Duration (minutes): 200 \n",
      "Description: A young physician and his beautiful mistress get swept up in the danger and drama of the Bolshevik Revolution in this Oscar-winning epic. \n",
      "\n",
      "Country: Venezuela \n",
      "Director: Matías Gueilburt \n",
      "Date Added: October 15, 2017 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 119 \n",
      "Description: Spanish-Mexican writer Paco Ignacio Taibo II hits the road to trace the footsteps of Ernesto \"Che\" Guevara and sheds new light on the revolutionary. \n",
      "\n",
      "Country: Netherlands \n",
      "Director: Bassam Kurdali \n",
      "Date Added: August 23, 2018 \n",
      "Release Year: 2006 \n",
      "Duration (minutes): 196 \n",
      "Description: Friends Proog and Emo live in a capricious, seemingly infinite machine with a sinister purpose in this experimental computer-animated short. \n",
      "\n",
      "Country: Cuba \n",
      "Director: No Director \n",
      "Date Added: December 9, 2016 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 1 \n",
      "Description: As Havana slowly revolves through the year, wistful detective Mario Conde probes the sultry heart of the city to investigate dark and deadly crimes. \n",
      "\n",
      "Country: Nicaragua \n",
      "Director: Marc Levin \n",
      "Date Added: December 15, 2017 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 103 \n",
      "Description: Take in the true account of drug kingpin \"Freeway\" Rick Ross's empire and how the CIA helped him fuel America's  devastating crack cocaine epidemic. \n",
      "\n",
      "Country: Pakistan \n",
      "Director: Asim Raza \n",
      "Date Added: July 1, 2017 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 170 \n",
      "Description: Three friends in modern-day Karachi navigate their post-college lives, while struggling to balance their passion for music with familial obligations. \n",
      "\n",
      "Country: Poland, \n",
      "Director: Janusz Majewski \n",
      "Date Added: October 1, 2019 \n",
      "Release Year: 1975 \n",
      "Duration (minutes): 96 \n",
      "Description: A motivated teen strives to rise from dishwasher to waiter at a luxury hotel only to tread in the abusive tide of its workplace hierarchy. \n",
      "\n",
      "Country: Dominican Republic \n",
      "Director: Johannes Roberts \n",
      "Date Added: January 10, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 89 \n",
      "Description: With little oxygen left in their scuba tanks, two sisters are trapped in a shark cage at the bottom of the ocean while great whites circle nearby. \n",
      "\n",
      "Country: Nepal \n",
      "Director: Stanley Tong \n",
      "Date Added: October 6, 2017 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 107 \n",
      "Description: Two mismatched archaeologists battle a team of vicious mercenaries in a race to discover an ancient Tibetan treasure of unimaginable worth. \n",
      "\n",
      "Country: Samoa \n",
      "Director: Sarah Moshman \n",
      "Date Added: May 1, 2017 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 92 \n",
      "Description: This documentary recounts the feats of the Coxless Crew, a team of four women who rowed from San Francisco to Australia in support of two charities. \n",
      "\n",
      "Country: Azerbaijan \n",
      "Director: No Director \n",
      "Date Added: December 26, 2016 \n",
      "Release Year: 2013 \n",
      "Duration (minutes): 1 \n",
      "Description: In the 16th century, the heir to a Muslim empire embarks on a dangerous journey to find his true love, who was taken away by her Christian father. \n",
      "\n",
      "Country: Ireland \n",
      "Director: Liv Ullmann \n",
      "Date Added: September 2, 2015 \n",
      "Release Year: 2014 \n",
      "Duration (minutes): 130 \n",
      "Description: On a summer night in 1890 Ireland, the unsettled daughter of aristocrats coaxes her father's valet to seduce her, though he's engaged to their cook. \n",
      "\n",
      "Country: China \n",
      "Director: Aaron Sorkin \n",
      "Date Added: April 1, 2020 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 141 \n",
      "Description: Former Olympian Molly Bloom ran a high-stakes poker game for the stars – until her lofty lifestyle nearly sent her to prison. \n",
      "\n",
      "Country: Botswana \n",
      "Director: Ben Bowie, Geoff Luck \n",
      "Date Added: May 28, 2020 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 91 \n",
      "Description: Scientists and animal keepers fight to save an orphaned baby elephant at a rescue camp in Botswana while struggling to defend its entire species. \n",
      "\n",
      "Country: Thailand \n",
      "Director: Banjong Pisanthanakun \n",
      "Date Added: September 5, 2018 \n",
      "Release Year: 2016 \n",
      "Duration (minutes): 135 \n",
      "Description: When his colleague (and crush) temporarily loses her memory, an overlooked geek seizes the chance to make an impression before she remembers again. \n",
      "\n",
      "Country: Vatican City \n",
      "Director: Wim Wenders \n",
      "Date Added: January 3, 2019 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 96 \n",
      "Description: Documentary filmmaker Wim Wenders travels the world with Pope Francis, recording the controversial pontiff's humanist views in a sharply divided age. \n",
      "\n",
      "Country: Canada \n",
      "Director: Anurag Singh \n",
      "Date Added: November 1, 2017 \n",
      "Release Year: 2014 \n",
      "Duration (minutes): 158 \n",
      "Description: During a time of political turmoil, a mother goes on a journey in search of her missing son, who has been misjudged and labeled a terrorist. \n",
      "\n",
      "Country: India \n",
      "Director: Raj Kapoor \n",
      "Date Added: December 31, 2019 \n",
      "Release Year: 1964 \n",
      "Duration (minutes): 228 \n",
      "Description: Returning home from war after being assumed dead, a pilot weds the woman he has long loved, unaware that she had been planning to marry his best friend. \n",
      "\n",
      "Country: Guatemala \n",
      "Director: Kenneth Müller \n",
      "Date Added: March 10, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 69 \n",
      "Description: After a terrorist attack in Guatemala, a baby is rendered deaf and motherless and her father is left to raise her alone. \n",
      "\n",
      "Country: Jamaica \n",
      "Director: Storm Saulter  Greece \n",
      "Director: Yorgos Lanthimos \n",
      "Date Added: December 2, 2018 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 119 \n",
      "Description: In a near-future world, single people are hunted and forced to find mates within 45 days, or be turned into animals and banished to the wilderness. \n",
      "\n",
      "Country: New Zealand \n",
      "Director: Peter Jackson \n",
      "Date Added: January 1, 2020 \n",
      "Release Year: 2003 \n",
      "Duration (minutes): 201 \n",
      "Description: Aragorn is revealed as the heir to the ancient kings as he, Gandalf and the other members of the broken fellowship struggle to save Gondor. \n",
      "\n",
      "Country: Somalia \n",
      "Director: Bryan Buckley \n",
      "Date Added: March 1, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 118 \n",
      "Description: An aspiring journalist travels to Somalia in hopes of making a name for himself by covering dangerous pirates and hijackers. \n",
      "\n",
      "Country: Kenya \n",
      "Director: Bryan Buckley \n",
      "Date Added: March 1, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 118 \n",
      "Description: An aspiring journalist travels to Somalia in hopes of making a name for himself by covering dangerous pirates and hijackers. \n",
      "\n",
      "Country: Sudan \n",
      "Director: Bryan Buckley \n",
      "Date Added: March 1, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 118 \n",
      "Description: An aspiring journalist travels to Somalia in hopes of making a name for himself by covering dangerous pirates and hijackers. \n",
      "\n",
      "Country: Panama \n",
      "Director: Kevin Derek \n",
      "Date Added: June 16, 2017 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 81 \n",
      "Description: A look at the life of karate master Fumio Demura shows how he spread the discipline in the West, winning countless devotees and influencing Hollywood. \n",
      "\n",
      "Country: Namibia \n",
      "Director: Shaul Schwarz, Christina Clusiau \n",
      "Date Added: February 13, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 110 \n",
      "Description: This documentary explores the tensions between the lucrative big-game hunting business and wildlife conservation from a variety of perspectives. \n",
      "\n",
      "Country: Zimbabwe \n",
      "Director: Shaul Schwarz, Christina Clusiau \n",
      "Date Added: February 13, 2018 \n",
      "Release Year: 2017 \n",
      "Duration (minutes): 110 \n",
      "Description: This documentary explores the tensions between the lucrative big-game hunting business and wildlife conservation from a variety of perspectives. \n",
      "\n",
      "Country: Uganda \n",
      "Director: Tiffanie Hsu \n",
      "Date Added: July 25, 2018 \n",
      "Release Year: 2018 \n",
      "Duration (minutes): 68 \n",
      "Description: Six young women, who each live near one of Earth's major rivers, share how the Waterschool environmental education program has impacted their lives. \n",
      "\n",
      "Country: East Germany \n",
      "Director: Mel Stuart \n",
      "Date Added: January 1, 2020 \n",
      "Release Year: 1971 \n",
      "Duration (minutes): 100 \n",
      "Description: Zany Willy Wonka causes a stir when he announces that golden tickets hidden inside his candy bars will admit holders into his secret confectionary. \n",
      "\n",
      "Country: Croatia \n",
      "Director: Ivona Juka \n",
      "Date Added: July 1, 2016 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 157 \n",
      "Description: A soap opera producer, director and makeup artist each face wrenching family turmoil, from teen rebellion and marital infidelity to Alzheimer's. \n",
      "\n",
      "Country: Slovenia \n",
      "Director: Ivona Juka \n",
      "Date Added: July 1, 2016 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 157 \n",
      "Description: A soap opera producer, director and makeup artist each face wrenching family turmoil, from teen rebellion and marital infidelity to Alzheimer's. \n",
      "\n",
      "Country: Serbia \n",
      "Director: Ivona Juka \n",
      "Date Added: July 1, 2016 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 157 \n",
      "Description: A soap opera producer, director and makeup artist each face wrenching family turmoil, from teen rebellion and marital infidelity to Alzheimer's. \n",
      "\n",
      "Country: Montenegro \n",
      "Director: Ivona Juka \n",
      "Date Added: July 1, 2016 \n",
      "Release Year: 2015 \n",
      "Duration (minutes): 157 \n",
      "Description: A soap opera producer, director and makeup artist each face wrenching family turmoil, from teen rebellion and marital infidelity to Alzheimer's. \n",
      "\n"
     ]
    }
   ],
   "source": [
    "%%R\n",
    "# Convert the \"duration\" column to character type\n",
    "movies_data_expanded$duration <- as.character(movies_data_expanded$duration)\n",
    "\n",
    "# Extract numeric values from the \"duration\" column\n",
    "movies_data_expanded$duration <- as.numeric(gsub(\"\\\\D\", \"\", movies_data_expanded$duration))\n",
    "\n",
    "# Group the movies by country and find the movie with the longest duration for each country\n",
    "longest_movies <- movies_data_expanded[which(movies_data_expanded$duration == ave(movies_data_expanded$duration, movies_data_expanded$country, FUN = max)), ]\n",
    "\n",
    "# Select the desired columns for the result\n",
    "long_duration_movies <- longest_movies[c('country', 'director', 'date_added', 'release_year', 'duration', 'description')]\n",
    "\n",
    "# Loop through the rows and print the information\n",
    "for (i in 1:nrow(longest_movies)) {\n",
    "    row <- longest_movies[i, ]\n",
    "    if (row$country == \"\") {\n",
    "        cat(\"Country:\", \"No Director\\n\")\n",
    "    } else {\n",
    "        cat(\"Country:\", row$country, \"\\n\")\n",
    "    }\n",
    "    cat(\"Director:\", row$director, \"\\n\")\n",
    "    cat(\"Date Added:\", row$date_added, \"\\n\")\n",
    "    cat(\"Release Year:\", row$release_year, \"\\n\")\n",
    "    cat(\"Duration (minutes):\", row$duration, \"\\n\")\n",
    "    cat(\"Description:\", row$description, \"\\n\\n\")\n",
    "}\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "OVOXt9bM11ti"
   },
   "source": [
    "#1E:Display the titleof the movie, its director, the date it was added to the platform and the date it was officially released where the official release date and the date it was added to the plafform has same year."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kIOYTVnyZcWr",
    "outputId": "c0c608cd-2cae-4b95-fc65-9316fc6cca7b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# A tibble: 1,860 × 4\n",
      "   title                                        director date_added release_year\n",
      "   <chr>                                        <chr>    <chr>             <dbl>\n",
      " 1 My Little Pony: A New Generation             Robert … September…         2021\n",
      " 2 The Starling                                 Theodor… September…         2021\n",
      " 3 Je Suis Karl                                 Christi… September…         2021\n",
      " 4 Confessions of an Invisible Girl             Bruno G… September…         2021\n",
      " 5 Intrusion                                    Adam Sa… September…         2021\n",
      " 6 Go! Go! Cory Carson: Chrissy Takes the Wheel Alex Wo… September…         2021\n",
      " 7 Ankahi Kahaniya                              Ashwiny… September…         2021\n",
      " 8 The Father Who Moves Mountains               Daniel … September…         2021\n",
      " 9 The Stronghold                               Cédric … September…         2021\n",
      "10 My Heroes Were Cowboys                       Tyler G… September…         2021\n",
      "# ℹ 1,850 more rows\n",
      "# ℹ Use `print(n = ...)` to see more rows\n"
     ]
    }
   ],
   "source": [
    "%%R\n",
    "# Filter the dataset for movies only\n",
    "movies_only <- subset(movies_data, type == \"Movie\")\n",
    "\n",
    "# Filter the movies where the release year and date added year are the same\n",
    "movies_same_year <- subset(movies_only, as.numeric(substr(date_added, nchar(date_added)-3, nchar(date_added))) == release_year)\n",
    "\n",
    "# Select the desired columns for the result\n",
    "result <- movies_same_year[c('title', 'director', 'date_added', 'release_year')]\n",
    "\n",
    "# Print the result\n",
    "print(result)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "mdA2y8xv1y7K"
   },
   "source": [
    "#1F:Display Director, the release year and number of movies and TV Shows directed by that director within a year and sort the results from highest.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "3WxAbMwZZl0f",
    "outputId": "b935bb52-2f40-4827-ed31-dbe35161b84e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "`summarise()` has grouped output by 'director'. You can override using the\n",
      "`.groups` argument.\n",
      "`summarise()` has grouped output by 'director'. You can override using the\n",
      "`.groups` argument.\n",
      "# A tibble: 5,948 × 5\n",
      "# Groups:   director [4,527]\n",
      "   director    release_year movie_count tv_show_count total_count\n",
      "   <chr>              <dbl>       <int>         <int>       <int>\n",
      " 1 No Director         2020          22           383         405\n",
      " 2 No Director         2019          35           366         401\n",
      " 3 No Director         2018          30           356         386\n",
      " 4 No Director         2021          25           270         295\n",
      " 5 No Director         2017          18           240         258\n",
      " 6 No Director         2016          17           231         248\n",
      " 7 No Director         2015          10           147         157\n",
      " 8 No Director         2014           6            79          85\n",
      " 9 No Director         2012           3            58          61\n",
      "10 No Director         2013           3            58          61\n",
      "# ℹ 5,938 more rows\n",
      "# ℹ Use `print(n = ...)` to see more rows\n"
     ]
    }
   ],
   "source": [
    "%%R\n",
    "\n",
    "\n",
    "\n",
    "# Filter the dataset for movies and TV shows separately\n",
    "movies <- filter(movies_data, type == \"Movie\")\n",
    "tv_shows <- filter(movies_data, type == \"TV Show\")\n",
    "\n",
    "# Group the movies by director and release year\n",
    "movies_grouped <- movies %>%\n",
    "  group_by(director, release_year) %>%\n",
    "  summarize(movie_count = n())\n",
    "\n",
    "# Group the TV shows by director and release year\n",
    "tv_shows_grouped <- tv_shows %>%\n",
    "  group_by(director, release_year) %>%\n",
    "  summarize(tv_show_count = n())\n",
    "\n",
    "# Merge the movie and TV show counts for each director and release year\n",
    "result <- full_join(movies_grouped, tv_shows_grouped, by = c('director', 'release_year')) %>%\n",
    "  replace(is.na(.), 0)\n",
    "\n",
    "# Calculate the total count and sort the result by total count in descending order\n",
    "result <- result %>%\n",
    "  mutate(total_count = movie_count + tv_show_count) %>%\n",
    "  arrange(desc(total_count))\n",
    "\n",
    "# Print the result\n",
    "print(result)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "9cPp7VmW1nj8"
   },
   "source": [
    "1G:Display the title of the movie/TV shows, the Director, the date it was added to netflix and the category it was listed in from the data which belongs to Documentary/Docuseries category."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "u9WWBftZZ08L",
    "outputId": "781685f1-d31c-493e-dcc6-507b1e9680b6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# A tibble: 1,263 × 4\n",
      "   title                                           director date_added listed_in\n",
      "   <chr>                                           <chr>    <chr>      <chr>    \n",
      " 1 Dick Johnson Is Dead                            Kirsten… September… Document…\n",
      " 2 Jailbirds New Orleans                           No Dire… September… Docuseri…\n",
      " 3 Vendetta: Truth, Lies and The Mafia             No Dire… September… Crime TV…\n",
      " 4 Crime Stories: India Detectives                 No Dire… September… British …\n",
      " 5 Europe's Most Dangerous Man: Otto Skorzeny in … Pedro d… September… Document…\n",
      " 6 Monsters Inside: The 24 Faces of Billy Milligan Olivier… September… Crime TV…\n",
      " 7 Love on the Spectrum                            No Dire… September… Docuseri…\n",
      " 8 My Heroes Were Cowboys                          Tyler G… September… Document…\n",
      " 9 Raja Rasoi Aur Anya Kahaniyan                   No Dire… September… Docuseri…\n",
      "10 Schumacher                                      Hanns-B… September… Document…\n",
      "# ℹ 1,253 more rows\n",
      "# ℹ Use `print(n = ...)` to see more rows\n"
     ]
    }
   ],
   "source": [
    "%%R\n",
    "# Filter the dataset for Documentary/Docuseries category\n",
    "documentaries <- filter(movies_data, grepl('Documentaries|Docuseries', listed_in))\n",
    "\n",
    "# Select the desired columns for the result\n",
    "result <- documentaries %>%\n",
    "  select(title, director, date_added, listed_in)\n",
    "\n",
    "# Print the result\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "W3SLLu-R1e9A"
   },
   "source": [
    "Task 1H : 4 points\n",
    "Display title, the date it was added to the plaform, type of category it was listed in and its description for Family Dramas.\n",
    "\n",
    "Hint: Use Description to look for type of Drama."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "z24F6uBoaER_",
    "outputId": "b41493a0-5973-4abc-972e-9b5a9d8e8153"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# A tibble: 307 × 4\n",
      "   title                               date_added         listed_in  description\n",
      "   <chr>                               <chr>              <chr>      <chr>      \n",
      " 1 Je Suis Karl                        September 23, 2021 Dramas, I… After most…\n",
      " 2 Omo Ghetto: the Saga                September 10, 2021 Action & … Twins are …\n",
      " 3 Shadow Parties                      September 6, 2021  Dramas, I… A family f…\n",
      " 4 Gurgaon                             September 2, 2021  Dramas, I… When the d…\n",
      " 5 Agatha Christie's Crooked House     September 1, 2021  Dramas, I… When a det…\n",
      " 6 Clickbait                           August 25, 2021    Crime TV … When famil…\n",
      " 7 Post Mortem: No One Dies in Skarnes August 25, 2021    Internati… She's back…\n",
      " 8 Bombay                              August 18, 2021    Dramas, I… Years afte…\n",
      " 9 The Lincoln Lawyer                  August 1, 2021     Dramas, T… A street-w…\n",
      "10 2 Weeks in Lagos                    July 16, 2021      Dramas, I… A business…\n",
      "# ℹ 297 more rows\n",
      "# ℹ Use `print(n = ...)` to see more rows\n"
     ]
    }
   ],
   "source": [
    "%%R\n",
    "\n",
    "# Filter for Drama movies\n",
    "drama_movies <- subset(movies_data, grepl(\"Drama\", listed_in, ignore.case = TRUE))\n",
    "\n",
    "# Filter for Family Dramas\n",
    "family_dramas <- subset(drama_movies, grepl(\"Family\", description, ignore.case = TRUE))\n",
    "\n",
    "# Select desired columns\n",
    "result <- family_dramas[, c(\"title\", \"date_added\", \"listed_in\", \"description\")]\n",
    "\n",
    "# Display the result\n",
    "print(result)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "LH7obVfg2hfz"
   },
   "source": [
    "Task 1I: 5 points\n",
    "Plot the Distribution of TV shows based on their number of seasons.(horizontal bar chart)\n",
    "\n",
    "Less than 3 seasons\n",
    "3 Seasons\n",
    "4 Seasons\n",
    "5 to less than 10 seasons.\n",
    "10 or more seasons."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 497
    },
    "id": "cmctityAag5G",
    "outputId": "c46b8da7-fa81-4eed-cea1-601e54901e6f"
   },
   "outputs": [
    {
     "data": {
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%R\n",
    "# Load the required libraries\n",
    "library(dplyr)\n",
    "library(ggplot2)\n",
    "\n",
    "# # Copying only TV Shows from movies_data\n",
    "tv_shows <- filter(movies_data, type == \"TV Show\")\n",
    "\n",
    "# Getting the number of seasons\n",
    "tv_shows$number_of_seasons <- as.numeric(gsub(\"\\\\D\", \"\", tv_shows$duration))\n",
    "\n",
    "# Grouping TV show's seasons into categories\n",
    "bins <- c(0, 3, 4, 5, 10, Inf)\n",
    "labels <- c(\n",
    "  \"Less than 3 seasons\",\n",
    "  \"3 seasons\",\n",
    "  \"4 seasons\",\n",
    "  \"5 to less than 10 seasons\",\n",
    "  \"10 or more seasons\"\n",
    ")\n",
    "tv_shows$season_category <- cut(tv_shows$number_of_seasons, breaks = bins, labels = labels, right = FALSE)\n",
    "\n",
    "# Count the number of TV shows in each season category\n",
    "season_counts <- table(tv_shows$season_category)\n",
    "\n",
    "# Convert the table to a data frame\n",
    "season_counts_df <- as.data.frame(season_counts)\n",
    "\n",
    "# Create a horizontal bar chart\n",
    "ggplot(season_counts_df, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +\n",
    "  geom_bar(stat = \"identity\") +\n",
    "  labs(x = \"Number of TV Shows\", y = \"Number of Seasons\", title = \"Distribution of TV Shows Based on the Number of Seasons\") +\n",
    "  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "YDpOxqYJ2n5L"
   },
   "source": [
    "Task 1J: 6 points\n",
    "Display a side by side pie chart where it shows different rating a movie and a TV show belongs to.\n",
    "\n",
    "Movie:\n",
    "\n",
    "Uncut/Not rated,\n",
    "Restricted,\n",
    "Parentel guidance,\n",
    "General audience,\n",
    "Adults only\n",
    "\n",
    "TV Show:\n",
    "All Children,\n",
    "Older Children,\n",
    "Parentel Presence,\n",
    "General audience,\n",
    "Mature\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "8E6PBryZazdh",
    "outputId": "729f0133-4c04-429e-94c1-36c70dd2b9c2"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: \n",
      "Attaching package: ‘gridExtra’\n",
      "\n",
      "\n",
      "WARNING:rpy2.rinterface_lib.callbacks:R[write to console]: The following object is masked from ‘package:dplyr’:\n",
      "\n",
      "    combine\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%R\n",
    "# Install the gridExtra package if not already installed\n",
    "if (!requireNamespace(\"gridExtra\", quietly = TRUE)) {\n",
    "  install.packages(\"gridExtra\")\n",
    "}\n",
    "# Load the required libraries\n",
    "library(ggplot2)\n",
    "library(gridExtra)\n",
    "\n",
    "# Movie Ratings\n",
    "movie_ratings <- c(\"NR\", \"R\", \"PG\", \"G\", \"NC-17\")\n",
    "\n",
    "# Filter movies with specific ratings\n",
    "filtered_movies <- movies_data %>%\n",
    "  filter(type == \"Movie\", rating %in% movie_ratings)\n",
    "\n",
    "# TV Show Ratings\n",
    "tv_show_ratings <- c(\"TV-Y\", \"TV-Y7\", \"TV-PG\", \"TV-G\", \"TV-MA\")\n",
    "\n",
    "# Filter TV shows with specific ratings\n",
    "filtered_tv_shows <- movies_data %>%\n",
    "  filter(type == \"TV Show\", rating %in% tv_show_ratings)\n",
    "\n",
    "# Count the number of movies and TV shows for each rating category\n",
    "movie_rating_counts <- table(filtered_movies$rating)\n",
    "tv_show_rating_counts <- table(filtered_tv_shows$rating)\n",
    "\n",
    "# Create pie charts for movie ratings and TV show ratings\n",
    "pie_chart_movies <- pie(movie_rating_counts, labels = paste(names(movie_rating_counts), \"(\", movie_rating_counts, \")\", sep = \"\"), main = \"Movie Ratings\")\n",
    "pie_chart_tv_shows <- pie(tv_show_rating_counts, labels = paste(names(tv_show_rating_counts), \"(\", tv_show_rating_counts, \")\", sep = \"\"), main = \"TV Show Ratings\")\n",
    "\n",
    "# Display the pie charts in the output cell\n",
    "grid.arrange(pie_chart_movies, pie_chart_tv_shows, ncol = 2)\n"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
